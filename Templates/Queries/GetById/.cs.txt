using {applicaitonRootNs}.Common.Interfaces;

namespace {namespace};

public record Get{itemname}ByIdQuery(int Id) : IRequest<{itemname}Response>;

internal sealed class Get{itemname}ByIdQueryHandler(IApplicationDbContext _context, IMapper _mapper)
     : IRequestHandler<Get{itemname}ByIdQuery, {itemname}Response>
{

    public async Task<{itemname}Response> Handle(Get{itemname}ByIdQuery request, CancellationToken cancellationToken)
    {
        var entity = await _context.{nameofPlural}
            .FindAsync(new object[] { request.Id }, cancellationToken);

        return _mapper.Map<{itemname}Response>(entity);
    }
}

