using {applicaitonRootNs}.Common.Interfaces;
using {domainRootNs}.Entities;

namespace {namespace};

public record Create{itemname}Command: IRequest<int>
{
    {dtoFieldDefinition}
    private class Mapping : Profile
    {
        public Mapping()
        {
             CreateMap<Create{itemname}Command,{itemname}>();
        }
    }
}
    
internal sealed class Create{itemname}CommandHandler(IApplicationDbContext _context, IMapper _mapper) 
    : IRequestHandler<Create{itemname}Command, int>
{
    public async Task<int> Handle(Create{itemname}Command request, CancellationToken cancellationToken)
    {
       var entity = _mapper.Map<{itemname}>(request);

       _context.{nameofPlural}.Add(entity);

       await _context.SaveChangesAsync(cancellationToken);

       return  entity.Id;
    }
}